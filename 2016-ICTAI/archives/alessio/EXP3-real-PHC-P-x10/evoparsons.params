parent.0 = /work/b/bari/ecj/ec/simple/simple.params


#please see paretoEvoparsons.params for details
eval.problem = ec.gecco16.probFakeEvoparons


#please see paretoEvoparsons.params for details
eval =                                  ec.gecco16.EvalPareto

eval.num-shuffled=			1
eval.num-current=                       0
eval.num-elites =                       0
eval.num-prev =                         0

generations=                            250
pop.subpops =                           2
pop.default-subpop =			0

pop.subpop.0 =                          ec.Subpopulation
pop.subpop.1 =                          ec.Subpopulation
pop.subpop.0.size =                     25 
pop.subpop.1.size =                     25
pop.subpop.0.species =                  ec.vector.IntegerVectorSpecies
pop.subpop.1.species =                  ec.vector.IntegerVectorSpecies
pop.subpop.0.species.crossover-type =   one
#Though it is written one point but actually uniform crossover is implemented.
#Please see pop.subpop.x.species.pipe.source.0. uninform cross over is applied
#for DoubleVectorIndividual in ECJ
pop.subpop.1.species.crossover-type =   one
pop.subpop.0.species.chunk-size =   1
pop.subpop.1.species.chunk-size =   1

pop.subpop.0.species.genome-size =      4
pop.subpop.1.species.genome-size =      4

pop.subpop.0.species.fitness =          ec.simple.SimpleFitness
pop.subpop.0.species.ind =              ec.vector.IntegerVectorIndividual

pop.subpop.1.species.fitness =          ec.simple.SimpleFitness
pop.subpop.1.species.ind =              ec.vector.IntegerVectorIndividual

pop.subpop.0.duplicate-retries = 2
pop.subpop.1.duplicate-retries = 2


pop.subpop.0.species.min-gene =         1
pop.subpop.0.species.max-gene =         10

pop.subpop.1.species.min-gene =         1
pop.subpop.1.species.max-gene =         10 

pop.subpop.1.species.min-gene.3 =       1 
pop.subpop.1.species.max-gene.3 =       3 

pop.subpop.0.species.pipe =             ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.mutation-type =    reset
pop.subpop.0.species.mutation-prob =    0.01

pop.subpop.0.species.pipe.source.0 =    ec.gecco16.CrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = ec.select.TournamentSelection
#select.tournament.size=2
#select.pick-worst=false

pop.subpop.1.species.pipe =             ec.vector.breed.VectorMutationPipeline
pop.subpop.1.species.mutation-type =    reset
pop.subpop.1.species.mutation-prob =    0.01

pop.subpop.1.species.pipe.source.0 =    ec.gecco16.CrossoverPipeline
pop.subpop.1.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.1.species.pipe.source.0.source.1 = ec.select.TournamentSelection

select.tournament.size = 2 

jobs=50
stat =					ec.simple.SimpleStatistics
stat.num-children = 1
stat.child.0 = ec.simple.SimpleShortStatistics
stat.child.0.file =			$teacher-learner.stat
stat.child.0.do-subpops =               true
print-unaccessed-params =               true
jobs=50
#only accpted value is SCA
eval.problem.algomode=SCA
